# REQUIRES: shell
# UNSUPPORTED: system-windows

# This test demonstrates "layered" multilib in which more than one
# multilib is matched.
# For example a multilib containing only a no-exceptions libc++ could
# be layered on top of a multilib containing C libs. This avoids the
# need to duplicate the C library for every libc++ variant.
# However -fno-exceptions is not yet supported for multilib selection
# so we use a more contrived -mfloat-abi example instead.
# There are cases when only one of the matching multilibs should be selected.
# The optional ExlusiveGroup flag can be used for those cases. When it
# is specified, the last multilib in that group will be selected.

# RUN: rm -rf %t && split-file %s %t
# RUN: mkdir -p %t/bin
# RUN: mkdir -p %t/lib/clang-runtimes
# RUN: ln -s %clang %t/bin/clang

# No ExclusiveGroup flag.
# Both variants will be selected.
# RUN: rm -f %t/lib/clang-runtimes/multilib.yaml
# RUN: ln -s %t/multilib-nogroups.yaml %t/lib/clang-runtimes/multilib.yaml
# RUN: %t/bin/clang -no-canonical-prefixes -x c++ %s -### -o %t.out 2>&1 \
# RUN:     --target=thumbv7m-none-eabi -mfloat-abi=softfp --sysroot= \
# RUN:   | FileCheck -DSYSROOT=%t %s --check-prefix=BOTH
# RUN: %t/bin/clang -no-canonical-prefixes -print-multi-directory 2>&1 \
# RUN:     --target=arm-none-eabi -mfloat-abi=softfp --sysroot= \
# RUN:   | FileCheck --check-prefix=BOTH-PRINT-MULTI-DIRECTORY %s

# Variants belong to different ExclusiveGroups.
# Both variants will be selected.
# RUN: rm -f %t/lib/clang-runtimes/multilib.yaml
# RUN: ln -s %t/multilib-diffgroups.yaml %t/lib/clang-runtimes/multilib.yaml
# RUN: %t/bin/clang -no-canonical-prefixes -x c++ %s -### -o %t.out 2>&1 \
# RUN:     --target=thumbv7m-none-eabi -mfloat-abi=softfp --sysroot= \
# RUN:   | FileCheck -DSYSROOT=%t %s --check-prefix=BOTH
# RUN: %t/bin/clang -no-canonical-prefixes -print-multi-directory 2>&1 \
# RUN:     --target=arm-none-eabi -mfloat-abi=softfp --sysroot= \
# RUN:   | FileCheck --check-prefix=BOTH-PRINT-MULTI-DIRECTORY %s

# BOTH:      "-cc1" "-triple" "thumbv7m-none-unknown-eabi"
# BOTH-SAME: "-internal-isystem" "[[SYSROOT]]/bin/../lib/clang-runtimes/softfp/include/c++/v1"
# BOTH-SAME: "-internal-isystem" "[[SYSROOT]]/bin/../lib/clang-runtimes/soft/include/c++/v1"
# BOTH-SAME: "-internal-isystem" "[[SYSROOT]]/bin/../lib/clang-runtimes/softfp/include"
# BOTH-SAME: "-internal-isystem" "[[SYSROOT]]/bin/../lib/clang-runtimes/soft/include"
# BOTH-NEXT: "-L[[SYSROOT]]/bin/../lib/clang-runtimes/softfp/lib"
# BOTH-SAME: "-L[[SYSROOT]]/bin/../lib/clang-runtimes/soft/lib"
# BOTH-PRINT-MULTI-DIRECTORY:      soft
# BOTH-PRINT-MULTI-DIRECTORY-NEXT:      softfp

# Variants belong to the same ExclusiveGroup.
# The last variant found (softfp) will be selected.
# RUN: rm -f %t/lib/clang-runtimes/multilib.yaml
# RUN: ln -s %t/multilib-samegroup.yaml %t/lib/clang-runtimes/multilib.yaml
# RUN: %t/bin/clang -no-canonical-prefixes -x c++ %s -### -o %t.out 2>&1 \
# RUN:     --target=thumbv7m-none-eabi -mfloat-abi=softfp --sysroot= \
# RUN:   | FileCheck -DSYSROOT=%t %s --check-prefix=SOFTFP
# RUN: %t/bin/clang -no-canonical-prefixes -print-multi-directory 2>&1 \
# RUN:     --target=arm-none-eabi -mfloat-abi=softfp --sysroot= \
# RUN:   | FileCheck --check-prefix=SOFTFP-PRINT-MULTI-DIRECTORY %s

# SOFTFP:      "-cc1" "-triple" "thumbv7m-none-unknown-eabi"
# SOFTFP-SAME: "-internal-isystem" "[[SYSROOT]]/bin/../lib/clang-runtimes/softfp/include/c++/v1"
# SOFTFP-NOTE: "-internal-isystem" "[[SYSROOT]]/bin/../lib/clang-runtimes/soft/include/c++/v1"
# SOFTFP-SAME: "-internal-isystem" "[[SYSROOT]]/bin/../lib/clang-runtimes/softfp/include"
# SOFTFP-NOT: "-internal-isystem" "[[SYSROOT]]/bin/../lib/clang-runtimes/soft/include"
# SOFTFP-NEXT: "-L[[SYSROOT]]/bin/../lib/clang-runtimes/softfp/lib"
# SOFTFP-NOT: "-L[[SYSROOT]]/bin/../lib/clang-runtimes/soft/lib"
# SOFTFP-PRINT-MULTI-DIRECTORY:      softfp
# SOFTFP-PRINT-MULTI-DIRECTORY-NOT:      soft


//--- multilib-nogroups.yaml
---
MultilibVersion: 1.0
Variants:
- Dir: soft
  Flags: [-mfloat-abi=soft]
- Dir: softfp
  Flags: [-mfloat-abi=softfp]
Mappings:
- Match: -mfloat-abi=softfp
  Flags: [-mfloat-abi=soft]
...

//--- multilib-diffgroups.yaml
---
MultilibVersion: 1.0
Variants:
- Dir: soft
  Flags: [-mfloat-abi=soft]
  ExclusiveGroup: G1
- Dir: softfp
  Flags: [-mfloat-abi=softfp]
  ExclusiveGroup: G2
Mappings:
- Match: -mfloat-abi=softfp
  Flags: [-mfloat-abi=soft]
...

//--- multilib-samegroup.yaml
---
MultilibVersion: 1.0
Variants:
- Dir: soft
  Flags: [-mfloat-abi=soft]
  ExclusiveGroup: G
- Dir: softfp
  Flags: [-mfloat-abi=softfp]
  ExclusiveGroup: G
Mappings:
- Match: -mfloat-abi=softfp
  Flags: [-mfloat-abi=soft]
...
